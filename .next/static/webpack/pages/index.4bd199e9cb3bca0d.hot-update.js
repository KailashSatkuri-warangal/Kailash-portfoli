"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./data/Projects.js":
/*!**************************!*\
  !*** ./data/Projects.js ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ProjectsList\": function() { return /* binding */ ProjectsList; }\n/* harmony export */ });\n/* module decorator */ module = __webpack_require__.hmd(module);\nvar ProjectsList = [\n    {\n        name: 'IoT anomaly detection',\n        description: 'Here are the IoT anomaly detection projects I have implemented that deals with the identification of cases that may indicate security breaches or hacks in IoT systems. The projects employ decision tree, random forest and linear regression to search for irregularities underlying the data: to detect any kind of intruding or malicious attempts. Through these models, the machine learning analysis of the accumulated IoT information and data helps the system to identify and even prevent unusual patterns so as to protect the assets of IoT devices and networks.',\n        image: '/Projects/iot.png',\n        github: 'https://github.com/KailashSatkuri-warangal/AIML-project-IoT-Device-Anomaly-Detection',\n        hosted: false,\n        host_link: 'https://github.com/KailashSatkuri-warangal/AIML-project-IoT-Device-Anomaly-Detection'\n    },\n    {\n        name: 'LearnVidya LMS portel',\n        description: 'An Intership program where LearnVidya is a Learning Management System (LMS) portal developed using WordPress, designed to facilitate online learning and course management. The platform allows educators to create, manage, and deliver online courses to students, providing an interactive and user-friendly environment. It includes features like course enrollment, quizzes, assignments, discussion forums, and certificates upon course completion. LearnVidya is built with custom WordPress themes and plugins to ensure scalability, flexibility, and an intuitive user experience. The portal also supports various multimedia content formats, such as videos, PDFs, and interactive lessons, to enhance the learning process.',\n        image: '/Projects/lms.png',\n        github: null,\n        hosted: true,\n        host_link: 'https://www.onlinelearnvidya.great-site.net/?i=1'\n    },\n    {\n        name: 'Web Travel Website',\n        description: 'An Intership program with self learned and integrated with backend php and sql website',\n        image: '/Projects/travel.png',\n        github: 'https://github.com/monosage-warangal/kailash-localhost',\n        hosted: true,\n        host_link: 'https://webtravel.great-site.net/index.php'\n    },\n    {\n        name: 'Test to image Generative AI Project',\n        description: 'Implemented a machine learning model for generating images from text descriptions using GANs and diffusion models. This project demonstrates the power of combining NLP and image generation for creative applications.',\n        image: '/Projects/toi.png',\n        github: 'https://github.com/KailashSatkuri-warangal/Text-to-image-Generation',\n        hosted: false,\n        host_link: 'https://github.com/KailashSatkuri-warangal/Text-to-image-Generation'\n    },\n    {\n        name: 'Discount Calculator Aicte Intership',\n        description: 'Devloped from android devloper console estended few features to the app devlopment',\n        image: '/Projects/tic.png',\n        github: 'https://github.com/KailashSatkuri-warangal/discountcalculator',\n        hosted: false,\n        host_link: ''\n    } /*,\n    {\n        name: 'Discount Calculator Aicte Intership',\n        description: 'Devloped from android devloper console estended few features to the app devlopment',\n        image: '/Projects/tic.png',\n        github: https://github.com/KailashSatkuri-warangal/discountcalculator,\n        hosted: false,\n        host_link: ''\n    },\n    {\n        name: 'y',\n         description: '',\n         image: '/Projects/.png',\n        github: null,\n        hosted: true,\n        host_link: ''\n    },\n    {\n        name: 'Qe',\n         description: '',\n         image: '/Projects/.png',\n        github: '',\n        hosted: true,\n        host_link: ''\n    },\n    {\n        name: 'Cart',\n         description: '',\n         image: '/Projects/.png',\n        github: '',\n        hosted: true,\n        host_link: ''\n    }*/ \n];\n\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9kYXRhL1Byb2plY3RzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU8sR0FBSyxDQUFDQSxZQUFZLEdBQUcsQ0FBQztJQUFBLENBQUM7UUFDdEJDLElBQUksRUFBRSxDQUF1QjtRQUM3QkMsV0FBVyxFQUFFLENBQWlqQjtRQUM5akJDLEtBQUssRUFBRSxDQUFtQjtRQUMxQkMsTUFBTSxFQUFFLENBQXNGO1FBQzlGQyxNQUFNLEVBQUUsS0FBSztRQUNiQyxTQUFTLEVBQUUsQ0FBc0Y7SUFDckcsQ0FBQztJQUNELENBQUM7UUFDR0wsSUFBSSxFQUFFLENBQXVCO1FBQzdCQyxXQUFXLEVBQUUsQ0FBNnNCO1FBQzF0QkMsS0FBSyxFQUFFLENBQW1CO1FBQzFCQyxNQUFNLEVBQUUsSUFBSTtRQUNaQyxNQUFNLEVBQUUsSUFBSTtRQUNaQyxTQUFTLEVBQUUsQ0FBa0Q7SUFDakUsQ0FBQztJQUNELENBQUM7UUFDR0wsSUFBSSxFQUFFLENBQW9CO1FBQzFCQyxXQUFXLEVBQUUsQ0FBd0Y7UUFDckdDLEtBQUssRUFBRSxDQUFzQjtRQUM3QkMsTUFBTSxFQUFFLENBQXdEO1FBQ2hFQyxNQUFNLEVBQUUsSUFBSTtRQUNaQyxTQUFTLEVBQUUsQ0FBNEM7SUFDM0QsQ0FBQztJQUNELENBQUM7UUFDR0wsSUFBSSxFQUFFLENBQXFDO1FBQzNDQyxXQUFXLEVBQUUsQ0FBeU47UUFDdE9DLEtBQUssRUFBRSxDQUFtQjtRQUMxQkMsTUFBTSxFQUFFLENBQXFFO1FBQzdFQyxNQUFNLEVBQUUsS0FBSztRQUNiQyxTQUFTLEVBQUUsQ0FBcUU7SUFDcEYsQ0FBQztJQUNELENBQUM7UUFDR0wsSUFBSSxFQUFFLENBQXFDO1FBQzNDQyxXQUFXLEVBQUUsQ0FBb0Y7UUFDakdDLEtBQUssRUFBRSxDQUFtQjtRQUMxQkMsTUFBTSxFQUFFLENBQStEO1FBQ3ZFQyxNQUFNLEVBQUUsS0FBSztRQUNiQyxTQUFTLEVBQUUsQ0FBRTtJQUNqQixDQUFDLENBZ0NFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQUFBO0FBQ1AsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9kYXRhL1Byb2plY3RzLmpzP2M1OWMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IFByb2plY3RzTGlzdCA9IFt7XG4gICAgICAgIG5hbWU6ICdJb1QgYW5vbWFseSBkZXRlY3Rpb24nLFxuICAgICAgICBkZXNjcmlwdGlvbjogJ0hlcmUgYXJlIHRoZSBJb1QgYW5vbWFseSBkZXRlY3Rpb24gcHJvamVjdHMgSSBoYXZlIGltcGxlbWVudGVkIHRoYXQgZGVhbHMgd2l0aCB0aGUgaWRlbnRpZmljYXRpb24gb2YgY2FzZXMgdGhhdCBtYXkgaW5kaWNhdGUgc2VjdXJpdHkgYnJlYWNoZXMgb3IgaGFja3MgaW4gSW9UIHN5c3RlbXMuIFRoZSBwcm9qZWN0cyBlbXBsb3kgZGVjaXNpb24gdHJlZSwgcmFuZG9tIGZvcmVzdCBhbmQgbGluZWFyIHJlZ3Jlc3Npb24gdG8gc2VhcmNoIGZvciBpcnJlZ3VsYXJpdGllcyB1bmRlcmx5aW5nIHRoZSBkYXRhOiB0byBkZXRlY3QgYW55IGtpbmQgb2YgaW50cnVkaW5nIG9yIG1hbGljaW91cyBhdHRlbXB0cy4gVGhyb3VnaCB0aGVzZSBtb2RlbHMsIHRoZSBtYWNoaW5lIGxlYXJuaW5nIGFuYWx5c2lzIG9mIHRoZSBhY2N1bXVsYXRlZCBJb1QgaW5mb3JtYXRpb24gYW5kIGRhdGEgaGVscHMgdGhlIHN5c3RlbSB0byBpZGVudGlmeSBhbmQgZXZlbiBwcmV2ZW50IHVudXN1YWwgcGF0dGVybnMgc28gYXMgdG8gcHJvdGVjdCB0aGUgYXNzZXRzIG9mIElvVCBkZXZpY2VzIGFuZCBuZXR3b3Jrcy4nLFxuICAgICAgICBpbWFnZTogJy9Qcm9qZWN0cy9pb3QucG5nJyxcbiAgICAgICAgZ2l0aHViOiAnaHR0cHM6Ly9naXRodWIuY29tL0thaWxhc2hTYXRrdXJpLXdhcmFuZ2FsL0FJTUwtcHJvamVjdC1Jb1QtRGV2aWNlLUFub21hbHktRGV0ZWN0aW9uJyxcbiAgICAgICAgaG9zdGVkOiBmYWxzZSxcbiAgICAgICAgaG9zdF9saW5rOiAnaHR0cHM6Ly9naXRodWIuY29tL0thaWxhc2hTYXRrdXJpLXdhcmFuZ2FsL0FJTUwtcHJvamVjdC1Jb1QtRGV2aWNlLUFub21hbHktRGV0ZWN0aW9uJ1xuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiAnTGVhcm5WaWR5YSBMTVMgcG9ydGVsJyxcbiAgICAgICAgZGVzY3JpcHRpb246ICdBbiBJbnRlcnNoaXAgcHJvZ3JhbSB3aGVyZSBMZWFyblZpZHlhIGlzIGEgTGVhcm5pbmcgTWFuYWdlbWVudCBTeXN0ZW0gKExNUykgcG9ydGFsIGRldmVsb3BlZCB1c2luZyBXb3JkUHJlc3MsIGRlc2lnbmVkIHRvIGZhY2lsaXRhdGUgb25saW5lIGxlYXJuaW5nIGFuZCBjb3Vyc2UgbWFuYWdlbWVudC4gVGhlIHBsYXRmb3JtIGFsbG93cyBlZHVjYXRvcnMgdG8gY3JlYXRlLCBtYW5hZ2UsIGFuZCBkZWxpdmVyIG9ubGluZSBjb3Vyc2VzIHRvIHN0dWRlbnRzLCBwcm92aWRpbmcgYW4gaW50ZXJhY3RpdmUgYW5kIHVzZXItZnJpZW5kbHkgZW52aXJvbm1lbnQuIEl0IGluY2x1ZGVzIGZlYXR1cmVzIGxpa2UgY291cnNlIGVucm9sbG1lbnQsIHF1aXp6ZXMsIGFzc2lnbm1lbnRzLCBkaXNjdXNzaW9uIGZvcnVtcywgYW5kIGNlcnRpZmljYXRlcyB1cG9uIGNvdXJzZSBjb21wbGV0aW9uLiBMZWFyblZpZHlhIGlzIGJ1aWx0IHdpdGggY3VzdG9tIFdvcmRQcmVzcyB0aGVtZXMgYW5kIHBsdWdpbnMgdG8gZW5zdXJlIHNjYWxhYmlsaXR5LCBmbGV4aWJpbGl0eSwgYW5kIGFuIGludHVpdGl2ZSB1c2VyIGV4cGVyaWVuY2UuIFRoZSBwb3J0YWwgYWxzbyBzdXBwb3J0cyB2YXJpb3VzIG11bHRpbWVkaWEgY29udGVudCBmb3JtYXRzLCBzdWNoIGFzIHZpZGVvcywgUERGcywgYW5kIGludGVyYWN0aXZlIGxlc3NvbnMsIHRvIGVuaGFuY2UgdGhlIGxlYXJuaW5nIHByb2Nlc3MuJyxcbiAgICAgICAgaW1hZ2U6ICcvUHJvamVjdHMvbG1zLnBuZycsXG4gICAgICAgIGdpdGh1YjogbnVsbCxcbiAgICAgICAgaG9zdGVkOiB0cnVlLFxuICAgICAgICBob3N0X2xpbms6ICdodHRwczovL3d3dy5vbmxpbmVsZWFybnZpZHlhLmdyZWF0LXNpdGUubmV0Lz9pPTEnXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG5hbWU6ICdXZWIgVHJhdmVsIFdlYnNpdGUnLFxuICAgICAgICBkZXNjcmlwdGlvbjogJ0FuIEludGVyc2hpcCBwcm9ncmFtIHdpdGggc2VsZiBsZWFybmVkIGFuZCBpbnRlZ3JhdGVkIHdpdGggYmFja2VuZCBwaHAgYW5kIHNxbCB3ZWJzaXRlJyxcbiAgICAgICAgaW1hZ2U6ICcvUHJvamVjdHMvdHJhdmVsLnBuZycsXG4gICAgICAgIGdpdGh1YjogJ2h0dHBzOi8vZ2l0aHViLmNvbS9tb25vc2FnZS13YXJhbmdhbC9rYWlsYXNoLWxvY2FsaG9zdCcsXG4gICAgICAgIGhvc3RlZDogdHJ1ZSxcbiAgICAgICAgaG9zdF9saW5rOiAnaHR0cHM6Ly93ZWJ0cmF2ZWwuZ3JlYXQtc2l0ZS5uZXQvaW5kZXgucGhwJ1xuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiAnVGVzdCB0byBpbWFnZSBHZW5lcmF0aXZlIEFJIFByb2plY3QnLFxuICAgICAgICBkZXNjcmlwdGlvbjogJ0ltcGxlbWVudGVkIGEgbWFjaGluZSBsZWFybmluZyBtb2RlbCBmb3IgZ2VuZXJhdGluZyBpbWFnZXMgZnJvbSB0ZXh0IGRlc2NyaXB0aW9ucyB1c2luZyBHQU5zIGFuZCBkaWZmdXNpb24gbW9kZWxzLiBUaGlzIHByb2plY3QgZGVtb25zdHJhdGVzIHRoZSBwb3dlciBvZiBjb21iaW5pbmcgTkxQIGFuZCBpbWFnZSBnZW5lcmF0aW9uIGZvciBjcmVhdGl2ZSBhcHBsaWNhdGlvbnMuJyxcbiAgICAgICAgaW1hZ2U6ICcvUHJvamVjdHMvdG9pLnBuZycsXG4gICAgICAgIGdpdGh1YjogJ2h0dHBzOi8vZ2l0aHViLmNvbS9LYWlsYXNoU2F0a3VyaS13YXJhbmdhbC9UZXh0LXRvLWltYWdlLUdlbmVyYXRpb24nLFxuICAgICAgICBob3N0ZWQ6IGZhbHNlLFxuICAgICAgICBob3N0X2xpbms6ICdodHRwczovL2dpdGh1Yi5jb20vS2FpbGFzaFNhdGt1cmktd2FyYW5nYWwvVGV4dC10by1pbWFnZS1HZW5lcmF0aW9uJ1xuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiAnRGlzY291bnQgQ2FsY3VsYXRvciBBaWN0ZSBJbnRlcnNoaXAnLFxuICAgICAgICBkZXNjcmlwdGlvbjogJ0RldmxvcGVkIGZyb20gYW5kcm9pZCBkZXZsb3BlciBjb25zb2xlIGVzdGVuZGVkIGZldyBmZWF0dXJlcyB0byB0aGUgYXBwIGRldmxvcG1lbnQnLFxuICAgICAgICBpbWFnZTogJy9Qcm9qZWN0cy90aWMucG5nJyxcbiAgICAgICAgZ2l0aHViOiAnaHR0cHM6Ly9naXRodWIuY29tL0thaWxhc2hTYXRrdXJpLXdhcmFuZ2FsL2Rpc2NvdW50Y2FsY3VsYXRvcicsXG4gICAgICAgIGhvc3RlZDogZmFsc2UsXG4gICAgICAgIGhvc3RfbGluazogJydcbiAgICB9LyosXG4gICAge1xuICAgICAgICBuYW1lOiAnRGlzY291bnQgQ2FsY3VsYXRvciBBaWN0ZSBJbnRlcnNoaXAnLFxuICAgICAgICBkZXNjcmlwdGlvbjogJ0RldmxvcGVkIGZyb20gYW5kcm9pZCBkZXZsb3BlciBjb25zb2xlIGVzdGVuZGVkIGZldyBmZWF0dXJlcyB0byB0aGUgYXBwIGRldmxvcG1lbnQnLFxuICAgICAgICBpbWFnZTogJy9Qcm9qZWN0cy90aWMucG5nJyxcbiAgICAgICAgZ2l0aHViOiBodHRwczovL2dpdGh1Yi5jb20vS2FpbGFzaFNhdGt1cmktd2FyYW5nYWwvZGlzY291bnRjYWxjdWxhdG9yLFxuICAgICAgICBob3N0ZWQ6IGZhbHNlLFxuICAgICAgICBob3N0X2xpbms6ICcnXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG5hbWU6ICd5JyxcbiAgICAgICAgIGRlc2NyaXB0aW9uOiAnJyxcbiAgICAgICAgIGltYWdlOiAnL1Byb2plY3RzLy5wbmcnLFxuICAgICAgICBnaXRodWI6IG51bGwsXG4gICAgICAgIGhvc3RlZDogdHJ1ZSxcbiAgICAgICAgaG9zdF9saW5rOiAnJ1xuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiAnUWUnLFxuICAgICAgICAgZGVzY3JpcHRpb246ICcnLFxuICAgICAgICAgaW1hZ2U6ICcvUHJvamVjdHMvLnBuZycsXG4gICAgICAgIGdpdGh1YjogJycsXG4gICAgICAgIGhvc3RlZDogdHJ1ZSxcbiAgICAgICAgaG9zdF9saW5rOiAnJ1xuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiAnQ2FydCcsXG4gICAgICAgICBkZXNjcmlwdGlvbjogJycsXG4gICAgICAgICBpbWFnZTogJy9Qcm9qZWN0cy8ucG5nJyxcbiAgICAgICAgZ2l0aHViOiAnJyxcbiAgICAgICAgaG9zdGVkOiB0cnVlLFxuICAgICAgICBob3N0X2xpbms6ICcnXG4gICAgfSovXG5dIl0sIm5hbWVzIjpbIlByb2plY3RzTGlzdCIsIm5hbWUiLCJkZXNjcmlwdGlvbiIsImltYWdlIiwiZ2l0aHViIiwiaG9zdGVkIiwiaG9zdF9saW5rIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./data/Projects.js\n");

/***/ })

});